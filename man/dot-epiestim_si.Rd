% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/import-standalone-test-utils.R
\name{.epiestim_si}
\alias{.epiestim_si}
\title{Generate a set of serial interval distributions using EpiEstim}
\usage{
.epiestim_si(
  mean_of_mean,
  sd_of_mean,
  mean_of_sd,
  sd_of_sd,
  days = 14,
  boots = 100,
  seed = Sys.time()
)
}
\arguments{
\item{mean_of_mean}{the mean of the si mean posteriors}

\item{sd_of_mean}{the sd of the si mean posteriors}

\item{mean_of_sd}{the mean of the si sd posteriors}

\item{sd_of_sd}{the sd of the si sd posteriors}

\item{days}{length of desired SI distribution}

\item{boots}{number of bootstraps to generate}
}
\value{
A dataframe containing the following columns:

* boot (anything) - a bootstrap identifier
* time (positive_double) - the end of the time period (in days)
* probability (proportion) - the probability of infection between previous time period until `time`

Grouped by: boot (exactly).
}
\description{
Generate a set of serial interval distributions using EpiEstim
}
\examples{
# N.B. EpiEstim cannot reconstruct an accurate set of distributions that
# match the inputs parameters due to truncation of the SI distribution.

if (interactive()) {

ggplot2::ggplot(
    .epiestim_si(5,1,3,1,boots = 100, days = 14),
    ggplot2::aes(x=time,ymin=probability,ymax=probability,group=time)
  )+ggplot2::geom_errorbar(alpha=0.2)

.epiestim_si(5,1,3,1,boots = 1000, days = 14) \%>\%
  dplyr::summarise(
    E = sum(probability*time),
    E2 = sum(probability*time^2)
  ) \%>\%
  dplyr::summarise(
    mean_of_mean = mean(E), sd_of_mean = stats::sd(E),
    mean_of_sd = mean(sqrt(E2 - E^2)),
    sd_of_sd = stats::sd(sqrt(E2 - E^2))
  )

}

# This becomes less of an issue with larger SI days parameter.
}
\keyword{internal}
